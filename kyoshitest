local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "BLAHLAH",
    LoadingTitle = "TUtorial",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    },
    Mobile = {
        Enabled = true, -- Set this to true to enable mobile dragging
        DragSpeed = 0.5 -- Adjust this value to control drag sensitivity
    }
 })

 local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Main")
 local Button = Tab:CreateButton({
    Name = "Inf Yield",
    Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end,
 })

 local Toggle = Tab:CreateToggle({
    Name = "WalkSpeed Toggle",
    CurrentValue = false,
    Flag = "WalkSpeedToggle",
    Callback = function(Value)
       if Value then
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
       else
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
       end
    end,
 })
 
 local Toggle = Tab:CreateToggle({
    Name = "Jump Power Toggle",
    CurrentValue = false,
    Flag = "JumpPowerToggle", 
    Callback = function(Value)
       if Value then
          game.Players.LocalPlayer.Character.Humanoid.JumpPower = 100
       else
          game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
       end
    end,
 })
 
 local Button = Tab:CreateButton({
    Name = "Reset Character",
    Callback = function()
       game.Players.LocalPlayer.Character:BreakJoints()
    end,
 })
 
 local Button = Tab:CreateButton({
    Name = "Anti AFK",
    Callback = function()
       local vu = game:GetService("VirtualUser")
       game:GetService("Players").LocalPlayer.Idled:connect(function()
          vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
          wait(1)
          vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
       end)
    end,
 })
 
 local Slider = Tab:CreateSlider({
    Name = "WalkSpeed Slider",
    Range = {16, 500},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
 })
 
 local Slider = Tab:CreateSlider({
    Name = "Jump Power Slider",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 50,
    Flag = "JumpPowerSlider",
    Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
 })
 
local Toggle = Tab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Flag = "FlyToggle",
    Callback = function(Value)
        local plr = game.Players.LocalPlayer
        local flying = false
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local maxspeed = 50
        local speed = 0

        if Value then
            local bg = Instance.new("BodyGyro", game.Players.LocalPlayer.Character.HumanoidRootPart)
            bg.P = 9e4
            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.cframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            local bv = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
            bv.velocity = Vector3.new(0,0.1,0)
            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
            flying = true

            local flyPad = Instance.new("ScreenGui")
            local upButton = Instance.new("TextButton")
            local downButton = Instance.new("TextButton")
            local leftButton = Instance.new("TextButton")
            local rightButton = Instance.new("TextButton")
            local forwardButton = Instance.new("TextButton")
            local backButton = Instance.new("TextButton")

            flyPad.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
            flyPad.Name = "FlyPad"

            local function createButton(name, pos)
                local button = Instance.new("TextButton")
                button.Size = UDim2.new(0, 50, 0, 50)
                button.Position = pos
                button.Text = name
                button.BackgroundTransparency = 0.5
                button.BackgroundColor3 = Color3.new(0, 0, 0)
                button.TextColor3 = Color3.new(1, 1, 1)
                button.Parent = flyPad
                return button
            end

            upButton = createButton("↑", UDim2.new(0.9, 0, 0.7, 0))
            downButton = createButton("↓", UDim2.new(0.9, 0, 0.8, 0))
            leftButton = createButton("←", UDim2.new(0.1, 0, 0.75, 0))
            rightButton = createButton("→", UDim2.new(0.2, 0, 0.75, 0))
            forwardButton = createButton("F", UDim2.new(0.15, 0, 0.65, 0))
            backButton = createButton("B", UDim2.new(0.15, 0, 0.85, 0))

            game:GetService("RunService").Heartbeat:Connect(function()
                if flying then
                    if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                        speed = speed+.5+(speed/maxspeed)
                        if speed > maxspeed then
                            speed = maxspeed
                        end
                    elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                        speed = speed-1
                        if speed < 0 then
                            speed = 0
                        end
                    end
                    if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                        lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                    elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                    else
                        bv.velocity = Vector3.new(0,0.1,0)
                    end
                    bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
                end
            end)

            local function buttonPressed(button, ctrlValue, ctrlKey)
                local pressing = false
                button.MouseButton1Down:Connect(function()
                    pressing = true
                    ctrl[ctrlKey] = ctrlValue
                end)
                button.MouseButton1Up:Connect(function()
                    pressing = false
                    ctrl[ctrlKey] = 0
                end)
            end

            buttonPressed(forwardButton, 1, "f")
            buttonPressed(backButton, -1, "b")
            buttonPressed(leftButton, -1, "l")
            buttonPressed(rightButton, 1, "r")
            buttonPressed(upButton, 1, "f")
            buttonPressed(downButton, -1, "b")

        else
            if game.Players.LocalPlayer.PlayerGui:FindFirstChild("FlyPad") then
                game.Players.LocalPlayer.PlayerGui.FlyPad:Destroy()
            end
            for _, v in pairs(game.Players.LocalPlayer.Character.HumanoidRootPart:GetChildren()) do
                if v:IsA("BodyGyro") or v:IsA("BodyVelocity") then
                    v:Destroy()
                end
            end
            flying = false
            ctrl = {f = 0, b = 0, l = 0, r = 0}
            lastctrl = {f = 0, b = 0, l = 0, r = 0}
            speed = 0
        end
    end,
})
