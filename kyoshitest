local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "BLAHLAH",
    LoadingTitle = "TUtorial",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    },
    Mobile = {
        Enabled = true, -- Set this to true to enable mobile dragging
        DragSpeed = 0.5 -- Adjust this value to control drag sensitivity
    }
 })

 local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Main")
 local Button = Tab:CreateButton({
    Name = "Inf Yield",
    Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end,
 })

local OtherTab = Window:CreateTab("Other", 4483362458)
local OtherSection = OtherTab:CreateSection("Other")

 local Toggle = Tab:CreateToggle({
    Name = "WalkSpeed Toggle",
    CurrentValue = false,
    Flag = "WalkSpeedToggle",
    Callback = function(Value)
       if Value then
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
       else
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
       end
    end,
 })
 
 local Toggle = Tab:CreateToggle({
    Name = "Jump Power Toggle",
    CurrentValue = false,
    Flag = "JumpPowerToggle", 
    Callback = function(Value)
       if Value then
          game.Players.LocalPlayer.Character.Humanoid.JumpPower = 100
       else
          game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
       end
    end,
 })
 
 local Button = Tab:CreateButton({
    Name = "Reset Character",
    Callback = function()
       game.Players.LocalPlayer.Character:BreakJoints()
    end,
 })
 
 local Button = Tab:CreateButton({
    Name = "Anti AFK",
    Callback = function()
       local vu = game:GetService("VirtualUser")
       game:GetService("Players").LocalPlayer.Idled:connect(function()
          vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
          wait(1)
          vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
       end)
    end,
 })
 
 local Slider = Tab:CreateSlider({
    Name = "WalkSpeed Slider",
    Range = {16, 500},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end,
 })
 
 local Slider = Tab:CreateSlider({
    Name = "Jump Power Slider",
    Range = {50, 500},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 50,
    Flag = "JumpPowerSlider",
    Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end,
 })
