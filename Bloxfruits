local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Kyoshi Hub | Blox Fruits",
   LoadingTitle = "Kyoshi Hub",
   LoadingSubtitle = "by Kyoshi",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "KyoshiHub",
      FileName = "BloxFruits"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Kyoshi Hub | Key System",
      Subtitle = "Key Required",
      Note = "Join Discord for Prem Version: discord.gg/SCPkfkEeRF",
      FileName = "KyoshiKey",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"KyoshiHubv3key"}
   }
})

local Tab = Window:CreateTab("Main", 11446825283) -- Second argument is the image ID
local Section = Tab:CreateSection("AutoFarm")
local Toggle = Tab:CreateToggle({
  Name = "AutoFarm",
  CurrentValue = false,
  Flag = "AutoFarmToggle",
  Callback = function(Value)
    getgenv().AutoFarm = Value
    if not Value then return end
    while getgenv().AutoFarm do
       local plr = game.Players.LocalPlayer
       local char = plr.Character
       if char and char:FindFirstChild("HumanoidRootPart") then
          -- Equip melee weapon
          local backpack = plr.Backpack
          for _, tool in pairs(backpack:GetChildren()) do
              if tool:IsA("Tool") and tool.ToolTip == "Melee" then
                  char.Humanoid:EquipTool(tool)
                  break
              end
          end
           
          -- Fast autotap
          game:GetService("VirtualUser"):CaptureController()
          game:GetService("VirtualUser"):ClickButton1(Vector2.new(0,0))
          game:GetService("RunService").RenderStepped:Wait()           
          -- Farm based on level
          local level = plr.Data.Level.Value
          local target = ""
          
          if level < 60 then
              target = "Bandit"
          elseif level >= 60 and level < 75 then
              target = "Desert Bandit"
          elseif level >= 75 and level < 90 then
              target = "Desert Officer" 
          elseif level >= 90 and level < 100 then
              target = "Desert King"
          elseif level >= 100 and level < 120 then
              target = "Snow Bandit"
          elseif level >= 120 and level < 150 then
              target = "Snow Warrior"
          elseif level >= 150 and level < 200 then
              target = "Marine"
          elseif level >= 200 and level < 250 then
              target = "Dark Master"
          elseif level >= 250 and level < 300 then
              target = "Toga Warrior"
          elseif level >= 300 and level < 350 then
              target = "Military Soldier"
          elseif level >= 350 and level < 400 then
              target = "Military Spy"
          elseif level >= 400 and level < 450 then
              target = "Fishman Warrior"
          elseif level >= 450 and level < 500 then
              target = "Fishman Commando"
          end
          
          for _, v in pairs(workspace.Enemies:GetChildren()) do
              if v.Name == target and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                  repeat
                      char.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,3)
                      game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Combat", v)
                      game:GetService("VirtualUser"):CaptureController()
                      game:GetService("VirtualUser"):ClickButton1(Vector2.new())
                      task.wait()
                  until not getgenv().AutoFarm or not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0
              end
          end
        end
        task.wait()
     end
  end
})

Tab:CreateToggle({
   Name = "Auto Farm Spawned Fruit",
   CurrentValue = false,
   Flag = "AutoFarmFruit",
   Callback = function(Value)
       getgenv().AutoFarmFruit = Value
       
       while getgenv().AutoFarmFruit and task.wait() do
           for _, v in pairs(game:GetService("Workspace"):GetChildren()) do
               if string.find(v.Name, "Fruit") and getgenv().AutoFarmFruit then
                   local humanoidRootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
                   local targetPosition = v.Handle.Position
                   
                   -- Calculate distance
                   local distance = (humanoidRootPart.Position - targetPosition).Magnitude
                   local tweenInfo = TweenInfo.new(distance/200, Enum.EasingStyle.Linear)
                   
                   -- Create and play tween
                   local tween = game:GetService("TweenService"):Create(
                       humanoidRootPart,
                       tweenInfo,
                       {CFrame = CFrame.new(targetPosition)}
                   )
                   if getgenv().AutoFarmFruit then
                       tween:Play()
                       tween.Completed:Wait()
                   else
                       tween:Cancel()
                       break
                   end
               end
           end
       end
   end
})

Tab:CreateToggle({
   Name = "Auto Farm Nearest Enemy",
   CurrentValue = false,
   Flag = "AutoFarmNearestEnemy", 
   Callback = function(Value)
       getgenv().AutoFarmCody = Value
       
       while getgenv().AutoFarmCody and task.wait() do
           local player = game.Players.LocalPlayer
           local char = player.Character
           if char and char:FindFirstChild("HumanoidRootPart") then
               -- Get nearest enemy
               local nearestEnemy = nil
               local shortestDistance = math.huge
               
               for _, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                   if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                       local distance = (char.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
                       if distance < shortestDistance then
                           shortestDistance = distance
                           nearestEnemy = v
                       end
                   end
               end
               
               -- Attack nearest enemy
               if nearestEnemy then
                   repeat
                       char.HumanoidRootPart.CFrame = nearestEnemy.HumanoidRootPart.CFrame * CFrame.new(0,0,3)
                       game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Combat", nearestEnemy)
                       game:GetService("VirtualUser"):CaptureController()
                       game:GetService("VirtualUser"):ClickButton1(Vector2.new())
                       task.wait()
                   until not getgenv().AutoFarmCody or not nearestEnemy or not nearestEnemy:FindFirstChild("Humanoid") or nearestEnemy.Humanoid.Health <= 0
               end
           end
           task.wait()
       end
   end
})

local Section = Tab:CreateSection("Get")
Tab:CreateButton({
   Name = "Get Level",
   Callback = function()
       local level = game.Players.LocalPlayer.Data.Level.Value
       local island = ""
       
       if level < 60 then
           island = "Pirate Village"
       elseif level >= 60 and level < 75 then
           island = "Desert Area"
       elseif level >= 75 and level < 90 then
           island = "Desert Area (Officer Zone)"
       elseif level >= 90 and level < 100 then
           island = "Desert Area (King's Territory)"
       elseif level >= 100 and level < 120 then
           island = "Snow Mountain"
       elseif level >= 120 and level < 150 then
           island = "Snow Mountain (Warrior Zone)"
       elseif level >= 150 and level < 200 then
           island = "Marine Base"
       elseif level >= 200 and level < 250 then
           island = "Dark Area"
       elseif level >= 250 and level < 300 then
           island = "Toga Kingdom"
       elseif level >= 300 and level < 350 then
           island = "Military Base"
       elseif level >= 350 and level < 400 then
           island = "Military Base (Spy Zone)"
       elseif level >= 400 and level < 450 then
           island = "Fishman Village"
       elseif level >= 450 and level < 500 then
           island = "Fishman Village (Commando Zone)"
       end       
       Rayfield:Notify({
           Title = "Level Information",
           Content = "You are level " .. level .. " which means you should be at " .. island,
           Duration = 6.5,
           Image = 4483362458,
           Actions = {
               Ignore = {
                   Name = "K",
                   Callback = function()
                       print("Tell Your Friends To join Tokyo hub v3 for Premium version")
                   end
               }
           }
       })
   end
})

Tab:CreateButton({
   Name = "Get Store Sale",
   Callback = function()
       local store = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits")
       local saleText = "Current Store Items:\n"
       
       for i,v in pairs(store) do
           if v.OnSale then
               saleText = saleText .. v.Name .. " - " .. v.Price .. " Beli (ON SALE!)\n"
           else
               saleText = saleText .. v.Name .. " - " .. v.Price .. " Beli\n"
           end
       end
       
       Rayfield:Notify({
           Title = "Store Sale Information",
           Content = saleText,
           Duration = 6.5,
           Image = 4483362458,
           Actions = {
               Ignore = {
                   Name = "K",
                   Callback = function()
                       print("Tell Your Friends To join Tokyo hub v3 for Premium version")
                   end
               }
           }
       })
   end
})

Tab:CreateButton({
   Name = "Get Spawned Fruits",
   Callback = function()
       local fruits = game:GetService("Workspace"):GetChildren()
       local spawnedFruits = "Currently Spawned Fruits:\n"
       local fruitCount = 0
       
       for i,v in pairs(fruits) do
           if string.find(v.Name, "Fruit") then
               spawnedFruits = spawnedFruits .. v.Name .. "\n"
               fruitCount = fruitCount + 1
           end
       end
       
       if fruitCount == 0 then
           spawnedFruits = "No fruits are currently spawned in the world"
       end
       
       Rayfield:Notify({
           Title = "Spawned Fruits Information",
           Content = spawnedFruits,
           Duration = 6.5,
           Image = 4483362458,
           Actions = {
               Ignore = {
                   Name = "K",
                   Callback = function()
                       print("Tell Your Friends To join Tokyo hub v3 for Premium version")
                   end
               }
           }
       })
   end
})

Tab:CreateButton({
   Name = "Get Players",
   Callback = function()
       local players = game:GetService("Players"):GetPlayers()
       local playerCount = #players
       local playerList = "Players in Game (" .. playerCount .. "):\n"
       
       for _, player in pairs(players) do
           playerList = playerList .. player.Name .. "\n"
       end
       
       Rayfield:Notify({
           Title = "Player Information",
           Content = playerList,
           Duration = 6.5,
           Image = 4483362458,
           Actions = {
               Ignore = {
                   Name = "K",
                   Callback = function()
                       print("Tell Your Friends To join Tokyo hub v3 for Premium version PLEASE")
                   end
               }
           }
       })
   end
})
  local PlayerDropdown = Tab:CreateDropdown({
      Name = "Select Player",
      Options = {},
      CurrentOption = "",
      Flag = "PlayerDropdown",
      Callback = function(Value)
          for _, player in pairs(game.Players:GetPlayers()) do
              if player.Name == Value then
                  selectedPlayer = player
                  break
              end
          end
      end,
  })

  -- Update dropdown options when players join/leave
  local function UpdatePlayerList()
      local playerNames = {}
      for _, player in pairs(game.Players:GetPlayers()) do
          table.insert(playerNames, player.Name)
      end
      PlayerDropdown:Refresh(playerNames, true)
  end

  UpdatePlayerList()
  game.Players.PlayerAdded:Connect(UpdatePlayerList)
  game.Players.PlayerRemoving:Connect(UpdatePlayerList)

  Tab:CreateButton({
      Name = "Get Info",
      Callback = function()
          if selectedPlayer then
              local playerData = {
                  ["Username"] = selectedPlayer.Name,
                  ["Display Name"] = selectedPlayer.DisplayName,
                  ["User ID"] = selectedPlayer.UserId,
                  ["Account Age"] = selectedPlayer.AccountAge,
                  ["Team"] = selectedPlayer.Team and selectedPlayer.Team.Name or "None",
                  ["Level"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats.Level and selectedPlayer.leaderstats.Level.Value or "N/A",
                  ["Beli"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats.Beli and selectedPlayer.leaderstats.Beli.Value or "N/A",
                  ["Race"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats.Race and selectedPlayer.leaderstats.Race.Value or "N/A",
                  ["Devil Fruit"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats["Devil Fruit"] and selectedPlayer.leaderstats["Devil Fruit"].Value or "N/A",
                  ["Bounty"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats.Bounty and selectedPlayer.leaderstats.Bounty.Value or "N/A",
                  ["Fighting Style"] = selectedPlayer.leaderstats and selectedPlayer.leaderstats["Fighting Style"] and selectedPlayer.leaderstats["Fighting Style"].Value or "N/A"
              }
              
              local infoText = "Player Information:\n\n"
              for stat, value in pairs(playerData) do
                  infoText = infoText .. stat .. ": " .. tostring(value) .. "\n"
              end
              
              Rayfield:Notify({
                  Title = "Player Stats",
                  Content = infoText,
                  Duration = 10,
                  Image = 4483362458,
                  Actions = {
                      Ignore = {
                          Name = "Close",
                          Callback = function() end
                      }
                  }
              })
          else
              Rayfield:Notify({
                  Title = "Error",
                  Content = "Please select a player first!",
                  Duration = 3,
                  Image = 4483362458
              })
          end
      end
  })
  
